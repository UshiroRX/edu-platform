events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log; # Для отладки можно временно поставить warn или debug

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # Настройки Gzip остаются без изменений
    gzip on;
    # ... (остальные ваши gzip настройки)

    # Зона для ограничения частоты запросов
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # --- Upstream серверы ---
    # Убедитесь, что имена (auth-service) и порты (8000) соответствуют вашим сервисам в Docker
    upstream auth_service {
        server auth-service:8000;
    }

    upstream quiz_service {
        server quiz-service:8000;
    }

    upstream frontend {
        server frontend:3000;
    }


    # --- Основной сервер, который слушает запросы ---
    server {
        listen 80;
        server_name localhost;

        # Роут для проверки здоровья Nginx
        location /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status": "healthy", "gateway": "nginx"}';
        }

        # --- Маршрутизация API для сервиса АВТОРИЗАЦИИ ---
        # Запрос: /api/auth/register -> Бэкенд: /auth/register
        location /api/auth/ {
            # Ограничение частоты запросов
            limit_req zone=api burst=20 nodelay;

            # ИСПРАВЛЕНИЕ: эта строка гарантирует, что /api/auth/ заменяется на /auth/
            proxy_pass http://auth_service/auth/;

            # Стандартные заголовки для проксирования
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }


        # --- Маршрутизация API для сервиса КВИЗОВ ---
        # Запрос: /api/quiz/get -> Бэкенд: /quiz/get
        location /api/quiz/ {
            # Ограничение частоты запросов
            limit_req zone=api burst=20 nodelay;

            # ИСПРАВЛЕНИЕ: ваша старая версия (proxy_pass http://quiz_service/;) была некорректной.
            # Она бы отправляла на бэкенд /get вместо /quiz/get.
            # Эта версия заменяет /api/quiz/ на /quiz/
            proxy_pass http://quiz_service/quiz/;

            # Стандартные заголовки для проксирования
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }


        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }
}