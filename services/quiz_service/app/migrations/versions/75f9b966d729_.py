"""empty message

Revision ID: 75f9b966d729
Revises: 
Create Date: 2025-08-03 14:56:42.318416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '75f9b966d729'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quiz',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='quiz'
    )
    op.create_table('tag',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='quiz'
    )
    op.create_table('question',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('question_type', sa.Enum('MULTIPLE_CHOICE', 'TEXT_ANSWER', 'SINGLE_CHOICE', name='questiontype'), nullable=False),
    sa.Column('question_text', sa.String(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.quiz.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='quiz'
    )
    op.create_table('quiz_result',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('total_questions', sa.Integer(), nullable=False),
    sa.Column('correct_answers', sa.Integer(), nullable=False),
    sa.Column('total_points', sa.Integer(), nullable=False),
    sa.Column('earned_points', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.quiz.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='quiz'
    )
    op.create_table('quiz_tag_association',
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.quiz.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['quiz.tag.id'], ),
    sa.PrimaryKeyConstraint('quiz_id', 'tag_id'),
    schema='quiz'
    )
    op.create_table('answer',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('answer_text', sa.String(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['quiz.question.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='quiz'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('answer', schema='quiz')
    op.drop_table('quiz_tag_association', schema='quiz')
    op.drop_table('quiz_result', schema='quiz')
    op.drop_table('question', schema='quiz')
    op.drop_table('tag', schema='quiz')
    op.drop_table('quiz', schema='quiz')
    # ### end Alembic commands ###
