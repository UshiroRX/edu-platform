services:
  db:
    image: postgres:15-alpine
    container_name: platform_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

    environment:
      - POSTGRES_USER=platform_user
      - POSTGRES_PASSWORD=strong_password
      - POSTGRES_DB=platform_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U platform_user -d platform_db"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: platform_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: ./services/nginx
    ports:
      - "8000:80"
    depends_on:
      - auth-service
      - quiz-service
      - frontend

  frontend:
    build:
      context: ./web_app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production

  auth-service:
    build:
      context: .
      dockerfile: ./services/auth_service/Dockerfile
    env_file:
      - .env
    volumes:
      - ./services/auth_service/app:/app/app
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy

  quiz-service:
    build:
      context: .
      dockerfile: ./services/quiz_service/Dockerfile
    env_file:
      - .env
    volumes:
      - ./services/quiz_service/app:/app/app
    ports:
      - "8002:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
